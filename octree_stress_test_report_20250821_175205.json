{
  "timestamp": "2025-08-21T17:52:05.205530",
  "total_tests": 3,
  "passed_tests": 0,
  "failed_tests": 3,
  "total_duration": 1.2129974365234375,
  "results": [
    {
      "name": "Collision Detection Stress Tests",
      "file": "Lib/test/test_octree_stress_collisions.py",
      "success": false,
      "duration": 0.41354894638061523,
      "return_code": 1,
      "stdout": "\ud83d\ude80 OCTREE COLLISION DETECTION STRESS TESTS\n==================================================\n\n\ud83d\udd25 COLLISION STRESS TEST: Accuracy Verification\n============================================================\n\n\ud83d\udd25 COLLISION STRESS TEST: Boundary Collisions\n============================================================\n\n\ud83d\udd25 COLLISION STRESS TEST: Performance Scaling\n============================================================\n\n\ud83d\udd2c Testing with 1,000 objects...\n\n\ud83d\udd25 COLLISION STRESS TEST: Massive Overlapping Objects\n============================================================\n",
      "stderr": "test_collision_accuracy_verification (__main__.CollisionStressTest.test_collision_accuracy_verification)\nVerify collision detection accuracy against brute force method. ... ERROR\ntest_collision_boundary_stress (__main__.CollisionStressTest.test_collision_boundary_stress)\nTest collision detection at octree boundaries. ... ERROR\ntest_collision_performance_scaling (__main__.CollisionStressTest.test_collision_performance_scaling)\nTest how collision detection performance scales with object count. ... ERROR\ntest_massive_overlapping_objects (__main__.CollisionStressTest.test_massive_overlapping_objects)\nTest collision detection with thousands of overlapping objects. ... ERROR\n\n======================================================================\nERROR: test_collision_accuracy_verification (__main__.CollisionStressTest.test_collision_accuracy_verification)\nVerify collision detection accuracy against brute force method.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_collisions.py\", line 151, in test_collision_accuracy_verification\n    octree_results = set(tree.query_range(min_x, min_y, min_z, max_x, max_y, max_z))\n                         ^^^^^^^^^^^^^^^^\nAttributeError: 'octree.Octree' object has no attribute 'query_range'. Did you mean: 'query_radius'?\n\n======================================================================\nERROR: test_collision_boundary_stress (__main__.CollisionStressTest.test_collision_boundary_stress)\nTest collision detection at octree boundaries.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_collisions.py\", line 241, in test_collision_boundary_stress\n    results = tree.query_range(min_x, min_y, min_z, max_x, max_y, max_z)\n              ^^^^^^^^^^^^^^^^\nAttributeError: 'octree.Octree' object has no attribute 'query_range'. Did you mean: 'query_radius'?\n\n======================================================================\nERROR: test_collision_performance_scaling (__main__.CollisionStressTest.test_collision_performance_scaling)\nTest how collision detection performance scales with object count.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_collisions.py\", line 291, in test_collision_performance_scaling\n    results = tree.query_range(\n              ^^^^^^^^^^^^^^^^\nAttributeError: 'octree.Octree' object has no attribute 'query_range'. Did you mean: 'query_radius'?\n\n======================================================================\nERROR: test_massive_overlapping_objects (__main__.CollisionStressTest.test_massive_overlapping_objects)\nTest collision detection with thousands of overlapping objects.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_collisions.py\", line 85, in test_massive_overlapping_objects\n    results = tree.query_range(\n              ^^^^^^^^^^^^^^^^\nAttributeError: 'octree.Octree' object has no attribute 'query_range'. Did you mean: 'query_radius'?\n\n----------------------------------------------------------------------\nRan 4 tests in 0.303s\n\nFAILED (errors=4)\n"
    },
    {
      "name": "Object Creation Stress Tests",
      "file": "Lib/test/test_octree_stress_objects.py",
      "success": false,
      "duration": 0.5385808944702148,
      "return_code": 1,
      "stdout": "\ud83d\ude80 OCTREE OBJECT CREATION STRESS TESTS\n==================================================\n\n\ud83d\udd25 OBJECT CREATION STRESS TEST: Concurrent Creation\n=================================================================\n\ud83e\uddf5 Creating 8 threads, 5,000 objects per thread\n\ud83d\udcca Total concurrent objects: 40,000\n\u274c Thread errors occurred:\n   Thread 0: 'octree.Octree' object has no attribute 'query_range'\n   Thread 1: 'octree.Octree' object has no attribute 'query_range'\n   Thread 2: 'octree.Octree' object has no attribute 'query_range'\n   Thread 3: 'octree.Octree' object has no attribute 'query_range'\n   Thread 4: 'octree.Octree' object has no attribute 'query_range'\n   Thread 5: 'octree.Octree' object has no attribute 'query_range'\n   Thread 6: 'octree.Octree' object has no attribute 'query_range'\n   Thread 7: 'octree.Octree' object has no attribute 'query_range'\n\n\ud83d\udd25 OBJECT CREATION STRESS TEST: Massive Object Creation\n=================================================================\n\ud83c\udfed Creating 1,000 octree instances with 1,000 objects each\n\ud83d\udcca Total objects to manage: 1,000,000\n\n\ud83d\udd25 OBJECT CREATION STRESS TEST: Memory Leak Detection\n=================================================================\n\ud83d\udd0d Running 50 cycles of 2,000 objects each...\n\n\ud83d\udd25 OBJECT CREATION STRESS TEST: Object Lifecycle\n=================================================================\n\ud83c\udf31 Phase 1: Inserting 100,000 objects...\n\n\ud83d\udd25 OBJECT CREATION STRESS TEST: Reference Management\n=================================================================\n\ud83d\udce6 Inserted 9 objects with various data types\n",
      "stderr": "test_concurrent_object_creation (__main__.ObjectCreationStressTest.test_concurrent_object_creation)\nTest concurrent object creation from multiple threads. ... ERROR\ntest_massive_object_creation (__main__.ObjectCreationStressTest.test_massive_object_creation)\nTest creating and destroying massive numbers of octree objects. ... ERROR\ntest_memory_leak_detection (__main__.ObjectCreationStressTest.test_memory_leak_detection)\nTest for memory leaks during object creation and destruction. ... ERROR\ntest_object_lifecycle_stress (__main__.ObjectCreationStressTest.test_object_lifecycle_stress)\nTest object insertion, modification, and removal under stress. ... ERROR\ntest_object_reference_management (__main__.ObjectCreationStressTest.test_object_reference_management)\nTest proper handling of object references and data. ... ERROR\n\n======================================================================\nERROR: test_concurrent_object_creation (__main__.ObjectCreationStressTest.test_concurrent_object_creation)\nTest concurrent object creation from multiple threads.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_objects.py\", line 302, in test_concurrent_object_creation\n    avg_thread_time = sum(result['time'] for result in thread_results.values()) / successful_threads\n                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~\nZeroDivisionError: division by zero\n\n======================================================================\nERROR: test_massive_object_creation (__main__.ObjectCreationStressTest.test_massive_object_creation)\nTest creating and destroying massive numbers of octree objects.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_objects.py\", line 75, in test_massive_object_creation\n    memory_usage.append(tree.get_memory_usage())\n                        ^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'octree.Octree' object has no attribute 'get_memory_usage'. Did you mean: 'memory_usage'?\n\n======================================================================\nERROR: test_memory_leak_detection (__main__.ObjectCreationStressTest.test_memory_leak_detection)\nTest for memory leaks during object creation and destruction.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_objects.py\", line 358, in test_memory_leak_detection\n    cycle_memory = tree.get_memory_usage()\n                   ^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'octree.Octree' object has no attribute 'get_memory_usage'. Did you mean: 'memory_usage'?\n\n======================================================================\nERROR: test_object_lifecycle_stress (__main__.ObjectCreationStressTest.test_object_lifecycle_stress)\nTest object insertion, modification, and removal under stress.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_objects.py\", line 137, in test_object_lifecycle_stress\n    initial_memory = tree.get_memory_usage()\n                     ^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'octree.Octree' object has no attribute 'get_memory_usage'. Did you mean: 'memory_usage'?\n\n======================================================================\nERROR: test_object_reference_management (__main__.ObjectCreationStressTest.test_object_reference_management)\nTest proper handling of object references and data.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_objects.py\", line 438, in test_object_reference_management\n    results = tree.query_range(x - 1, y - 1, z - 1, x + 1, y + 1, z + 1)\n              ^^^^^^^^^^^^^^^^\nAttributeError: 'octree.Octree' object has no attribute 'query_range'. Did you mean: 'query_radius'?\n\n----------------------------------------------------------------------\nRan 5 tests in 0.435s\n\nFAILED (errors=5)\n"
    },
    {
      "name": "API Robustness Stress Tests",
      "file": "Lib/test/test_octree_stress_api.py",
      "success": false,
      "duration": 0.2608675956726074,
      "return_code": 1,
      "stdout": "\ud83d\ude80 OCTREE API STRESS TESTS\n==================================================\n\n\ud83d\udd25 API STRESS TEST: API Abuse Scenarios\n============================================================\n\ud83d\udd28 Scenario 1: Rapid-fire mixed operations...\n   Error in rapid operation 4: 'octree.Octree' object has no attribute 'query_range'\n   Error in rapid operation 5: 'octree.Octree' object has no attribute 'get_depth'\n   Error in rapid operation 7: 'octree.Octree' object has no attribute 'get_depth'\n   Error in rapid operation 8: 'octree.Octree' object has no attribute 'query_range'\n   Error in rapid operation 9: 'octree.Octree' object has no attribute 'get_depth'\n   Completed 5,113 operations in 0.016s\n   Operations/sec: 322770\n   Errors: 4887\n\n\ud83d\udcbe Scenario 2: Memory pressure with large objects...\n   Large object insertions completed in 0.006s\n\n\ud83d\udd25 API STRESS TEST: API Consistency Verification\n============================================================\n\ud83d\udd04 Testing API consistency across different approaches...\n   Tree 1: Sequential insertion...\n   Tree 2: Random order insertion...\n\n\ud83d\udd25 API STRESS TEST: Concurrent API Access\n============================================================\n\ud83e\uddf5 Starting 8 concurrent workers...\n   Thread 7 error: 'octree.Octree' object has no attribute 'get_depth'\n   Thread 7 error: 'octree.Octree' object has no attribute 'get_depth'\n   Thread 7 error: 'octree.Octree' object has no attribute 'get_depth'\n   Thread 2 error: 'octree.Octree' object has no attribute 'query_range'\n   Thread 2 error: 'octree.Octree' object has no attribute 'query_range'\n   Thread 2 error: 'octree.Octree' object has no attribute 'query_range'\n   Thread 6 error: 'octree.Octree' object has no attribute 'get_depth'\n   Thread 6 error: 'octree.Octree' object has no attribute 'get_depth'\n   Thread 6 error: 'octree.Octree' object has no attribute 'get_depth'\n   Thread 4 error: 'octree.Octree' object has no attribute 'query_range'\n   Thread 4 error: 'octree.Octree' object has no attribute 'query_range'\n   Thread 4 error: 'octree.Octree' object has no attribute 'query_range'\n   Thread 5 error: 'octree.Octree' object has no attribute 'query_range'\n   Thread 5 error: 'octree.Octree' object has no attribute 'query_range'\n   Thread 5 error: 'octree.Octree' object has no attribute 'query_range'\n   Thread 3 error: 'octree.Octree' object has no attribute 'query_range'\n   Thread 3 error: 'octree.Octree' object has no attribute 'query_range'\n   Thread 3 error: 'octree.Octree' object has no attribute 'query_range'\n\n\ud83d\udcca CONCURRENT ACCESS RESULTS:\n   Total time: 0.122s\n   Total operations: 3,209\n   Total errors: 4791\n   Overall rate: 26400 ops/sec\n   Error rate: 149.30%\n\n\ud83d\udcc8 PER-THREAD BREAKDOWN:\nThread         Type      Ops  Errors  Time(s)  Ops/sec\n-----------------------------------------------------------------\n     0 heavy_insert     1000       0    0.00  610436\n     1 heavy_insert     1000       0    0.00  510070\n     2  heavy_query        0    1000    0.00       0\n     3  heavy_query        0    1000    0.00       0\n     4        mixed      618     382    0.00  262489\n     5        mixed      591     409    0.00  333132\n     6   properties        0    1000    0.11       0\n     7   properties        0    1000    0.00       0\n\n\ud83d\udd25 API STRESS TEST: Extreme Boundary Conditions\n============================================================\n\n\ud83e\uddea Testing: Microscopic bounds\n    Bounds: (0, 0, 0, 0.001, 0.001, 0.001)\n      \u274c Query failed: 'octree.Octree' object has no attribute 'query_range'\n      \u274c Properties failed: 'octree.Octree' object has no attribute 'get_depth'\n      \u274c Tree creation failed: False is not true : Query should work for Microscopic bounds\n\n\ud83d\udd25 API STRESS TEST: Invalid Input Handling\n============================================================\n\ud83d\udd0d Testing invalid octree creation...\n   Case 1: Properly rejected bounds (10, 10, 10, 0, 0, 0)\n   Case 2: Properly rejected bounds (0, 10, 0, 10, 0, 10)\n   Case 3: Properly rejected bounds (nan, 0, 0, 10, 10, 10)\n   Case 4: Created with bounds (0, 0, 0, inf, 10, 10) (unexpected success)\n   Case 5: Created with bounds (-inf, 0, 0, 10, 10, 10) (unexpected success)\n   Case 6: Created with bounds (5, 5, 5, 5, 5, 5) (unexpected success)\n   Case 7: Created with bounds (0, 0, 0, 0, 10, 10) (unexpected success)\n\n\ud83d\udd0d Testing invalid insertions...\n   Inserted (nan, 0, 0, 'nan_x') - unexpected success\n   Inserted (0, nan, 0, 'nan_y') - unexpected success\n   Inserted (0, 0, nan, 'nan_z') - unexpected success\n   Inserted (inf, 0, 0, 'inf_x') - unexpected success\n   Inserted (0, -inf, 0, 'neg_inf_y') - unexpected success\n   Inserted (100, 0, 0, 'out_of_bounds_x') - unexpected success\n   Inserted (0, 100, 0, 'out_of_bounds_y') - unexpected success\n   Inserted (0, 0, 100, 'out_of_bounds_z') - unexpected success\n   Inserted (10, 10, 10, 'exactly_on_boundary') - unexpected success\n   Inserted (-10, -10, -10, 'exactly_on_min_boundary') - unexpected success\n\n\ud83d\udd0d Testing invalid queries...\n   Properly rejected query (5, 5, 5, 0, 0, 0): AttributeError\n   Properly rejected query (nan, 0, 0, 5, 5, 5): AttributeError\n   Properly rejected query (0, 0, 0, nan, 5, 5): AttributeError\n   Properly rejected query (-inf, 0, 0, 5, 5, 5): AttributeError\n   Properly rejected query (0, 0, 0, inf, 5, 5): AttributeError\n\n\ud83d\udcca Invalid input handling: 8/22 properly rejected\n",
      "stderr": "test_api_abuse_scenarios (__main__.APIStressTest.test_api_abuse_scenarios)\nTest API under abusive usage patterns. ... ERROR\ntest_api_consistency_verification (__main__.APIStressTest.test_api_consistency_verification)\nVerify API consistency across different usage patterns. ... ERROR\ntest_concurrent_api_access (__main__.APIStressTest.test_concurrent_api_access)\nTest API thread safety and concurrent access patterns. ... ERROR\ntest_extreme_boundary_conditions (__main__.APIStressTest.test_extreme_boundary_conditions)\nTest API with extreme boundary conditions and edge cases. ... FAIL\ntest_invalid_input_handling (__main__.APIStressTest.test_invalid_input_handling)\nTest API robustness with invalid inputs. ... FAIL\n\n======================================================================\nERROR: test_api_abuse_scenarios (__main__.APIStressTest.test_api_abuse_scenarios)\nTest API under abusive usage patterns.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_api.py\", line 313, in test_api_abuse_scenarios\n    print(f\"   Final tree memory: {tree.get_memory_usage():,} bytes\")\n                                   ^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'octree.Octree' object has no attribute 'get_memory_usage'. Did you mean: 'memory_usage'?\n\n======================================================================\nERROR: test_api_consistency_verification (__main__.APIStressTest.test_api_consistency_verification)\nVerify API consistency across different usage patterns.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_api.py\", line 548, in test_api_consistency_verification\n    tree1_depth = tree1.get_depth()\n                  ^^^^^^^^^^^^^^^\nAttributeError: 'octree.Octree' object has no attribute 'get_depth'\n\n======================================================================\nERROR: test_concurrent_api_access (__main__.APIStressTest.test_concurrent_api_access)\nTest API thread safety and concurrent access patterns.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_api.py\", line 499, in test_concurrent_api_access\n    final_depth = shared_tree.get_depth()\n                  ^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'octree.Octree' object has no attribute 'get_depth'\n\n======================================================================\nFAIL: test_extreme_boundary_conditions (__main__.APIStressTest.test_extreme_boundary_conditions)\nTest API with extreme boundary conditions and edge cases.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_api.py\", line 122, in test_extreme_boundary_conditions\n    self.assertTrue(query_success, f\"Query should work for {name}\")\n    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAssertionError: False is not true : Query should work for Microscopic bounds\n\n======================================================================\nFAIL: test_invalid_input_handling (__main__.APIStressTest.test_invalid_input_handling)\nTest API robustness with invalid inputs.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nico/WORK_ROOT/cpython/Lib/test/test_octree_stress_api.py\", line 230, in test_invalid_input_handling\n    self.assertGreater(error_count, total_tests * 0.5,\n    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                      \"Should reject majority of invalid inputs\")\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAssertionError: 8 not greater than 11.0 : Should reject majority of invalid inputs\n\n----------------------------------------------------------------------\nRan 5 tests in 0.168s\n\nFAILED (failures=2, errors=3)\n"
    }
  ]
}